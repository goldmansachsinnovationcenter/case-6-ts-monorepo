name: Build and Lint

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build Lint Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run ESLint
        run: pnpm turbo run lint

      - name: Build
        run: pnpm turbo run build
        env:
          NODE_ENV: production
          VITE_EO_CLOUD_API_DOMAIN: ci-api.example.com
          EO_CLOUD_API_DOMAIN: ci-api.example.com # Added to provide the non-prefixed version
          VITE_BIO_S3_BUCKET_NAME: ci-example-bucket
          PASSTHROUGH_SOME_CREDENTIAL: this-will-not-be-replaced

      - name: Type Check
        run: |
          echo "Running TypeScript type check for all packages..."
          pnpm run typecheck

      - name: Run tests and collect coverage
        run: pnpm turbo test:coverage

      - name: Install LCOV
        run: sudo apt-get update && sudo apt-get install -y lcov

      - name: Combine coverage reports
        run: |
          mkdir -p combined-coverage
          OUTPUT_LCOV_FILE="combined-coverage/lcov.info"

          # Find all lcov.info files and prepare arguments for lcov command
          # -print0 and xargs -0 handle filenames with spaces/newlines (though unlikely for lcov.info)
          # xargs -r ensures printf is not called if find returns no files.
          # The result is a string like "-a path1 -a path2 " or empty.
          LCOV_FILES_ARGS=$(find . -name "lcov.info" -not -path "./combined-coverage/*" -print0 | xargs -0 -r printf -- "-a %s ")

          if [ -n "$LCOV_FILES_ARGS" ]; then
            # If files were found, combine them.
            # Word splitting on $LCOV_FILES_ARGS is intentional here to pass args correctly.
            lcov $LCOV_FILES_ARGS -o "$OUTPUT_LCOV_FILE" --rc branch_coverage=1 --ignore-errors source,empty
            echo "Successfully combined lcov reports into $OUTPUT_LCOV_FILE"
          else
            # No lcov.info files found. Create a minimal valid lcov file.
            # This helps subsequent steps like genhtml or artifact upload not to fail.
            echo "No lcov.info files found. Creating a minimal report at $OUTPUT_LCOV_FILE"
            echo "TN:" > "$OUTPUT_LCOV_FILE" # Test Name (optional)
            echo "SF:no_coverage_data_found.dummy" >> "$OUTPUT_LCOV_FILE" # Source File (dummy)
            echo "FNF:0" >> "$OUTPUT_LCOV_FILE" # Functions Not Found
            echo "FNH:0" >> "$OUTPUT_LCOV_FILE" # Functions Hit
            echo "LF:0" >> "$OUTPUT_LCOV_FILE"  # Lines Found
            echo "LH:0" >> "$OUTPUT_LCOV_FILE"  # Lines Hit
            echo "end_of_record" >> "$OUTPUT_LCOV_FILE"
          fi

      - name: Generate HTML coverage report
        run: genhtml combined-coverage/lcov.info --output-directory combined-coverage/html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: combined-coverage/html
          retention-days: 7

      - name: Publish coverage report
        uses: actions/upload-artifact@v4
        with:
          name: combined-coverage-report
          path: combined-coverage/html
          retention-days: 7

      - name: Coverage Report Summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: combined-coverage/lcov.info # Ensure this path is correct
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: markdown # Changed from 'both' to 'markdown'
          thresholds: "60 80"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: Coverage Report
          recreate: true
          path: code-coverage-results.md # Ensure this file is generated by the previous step
